h help:  ## Show help
	@grep -E '^[.a-zA-Z_ -]+:.*?## .*$$' $(MAKEFILE_LIST) | awk 'BEGIN {FS = ":.*?## "}; {printf "\033[36m%-30s\033[0m %s\n", $$1, $$2}'

c clean: ## Clean autogenerated files
	rm -rf dist
	find . -type f -name "*.DS_Store" -ls -delete
	find . | grep -E "(__pycache__|\.pyc|\.pyo)" | xargs rm -rf
	find . | grep -E ".pytest_cache" | xargs rm -rf
	find . | grep -E ".ipynb_checkpoints" | xargs rm -rf
	rm -f .coverage

cl clean-logs: ## Clean logs
	rm -rf logs/**

f format: ## Run pre-commit hooks
	pre-commit run -a

s sync: ## Merge changes from main branch to your current branch
	git pull
	git pull origin main

a activate: ## Activate the uv environment
	@echo "Add to ~/.tcshrc: alias a 'echo \"source .venv/bin/activate.csh\" && source .venv/bin/activate.csh'"
	@echo "Then just type: a"

d deactivate: ## Deactivate the uv environment
	@echo "Add to ~/.tcshrc: alias d 'echo deactivate && deactivate'"
	@echo "Then just type: d"

t test: ## Run not slow tests
	pytest -k "not slow"

tf test-full pt: ## Run all tests
	pytest

td tdense train: ## Train the model (SimpleDenseNet) 
	time python src/train.py

tm tmps trainmps: ## Train the model using MPS on a Mac
	time python src/train.py trainer.accelerator=mps data.num_workers=15

tc tcnn train-cnn: ## Train with CNN architecture
	time python src/train.py model=mnist_cnn

tcm tcnn-mps train-cnn-mps: ## Train CNN with MPS on Mac
	time python src/train.py model=mnist_cnn trainer.accelerator=mps data.num_workers=15

tq tquick train-quick: ## Quick training test (SimpleDenseNet, 1 epoch)
	python src/train.py trainer.max_epochs=1 +trainer.limit_train_batches=10 +trainer.limit_val_batches=5

tcq tcnn-quick train-cnn-quick: ## Quick SimpleCNN training test (1 epoch)
	python src/train.py model=mnist_cnn trainer.max_epochs=1 +trainer.limit_train_batches=10 +trainer.limit_val_batches=5

tqall train-all-quick: tq tcq ## Quick SimpleDenseNet and SimpleCNN training tests (1 epoch)

ca compare-arch: ## Compare architectures (quick runs)
	@echo "=== Training SimpleDenseNet ==="
	python src/train.py trainer.max_epochs=3 tags="[arch_comparison,dense]"
	@echo "=== Training SimpleCNN ==="
	python src/train.py model=mnist_cnn trainer.max_epochs=3 tags="[arch_comparison,cnn]"
	@echo "=== Check logs/ directory for results comparison ==="

te texample train-example: ## Run example experiment config (reproducible baseline)
	time python src/train.py experiment=example
